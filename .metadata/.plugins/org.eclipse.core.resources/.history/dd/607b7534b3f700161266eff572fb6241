package io.vedder.robotics.particlefilter;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;

import io.vedder.robotics.particlefilter.ParticleContainer.WeightParticle;
import io.vedder.robotics.particlefilter.messages.OdomMessage;
import io.vedder.robotics.particlefilter.messages.SensorMessage;

public class TestMain {

  public static void main(String[] args) {
    System.out.println("Starting Particle Filter Tester!");
    System.out.println("Working Directory = " + System.getProperty("user.dir"));
    String mapPath = "../reference-material/assignment-2-data/map-test.txt";
    String particleSavePath = "../reference-material/assignment-2-data/test-particles.txt";
    // String logPath = "../reference-material/assignment-2-data/robot-data.log";

    Map map = new Map(mapPath);
    SensorModel sensorModel = new SensorModel();
    MotionModel motionModel = new MotionModel();

    final boolean TEST_MOTION_MODEL = false;

    if (TEST_MOTION_MODEL) {
      ParticleContainer particleContainer = new ParticleContainer(500,
          new Pose(1, 1, -3 * Math.PI / 4), sensorModel, motionModel, map, false);
      for (int i = 0; i < 10; ++i) {
        OdomMessage odomMessage = new OdomMessage(0, 0.01, 0, 0);
        particleContainer.updateMotion(odomMessage);
      }
    } else {
      ParticleContainer particleContainer =
          new ParticleContainer(Arrays.asList(new Pose(5, 1, Math.PI), new Pose(5, 1, 0)),
              sensorModel, motionModel, map);
      SensorMessage sm = new SensorMessage(0, 1, -Math.PI / 2, Math.PI / 2, Math.PI / 2,
          Arrays.asList(1.414, 1.414, 1.414));

      for (WeightParticle p : particleContainer.getParticles()) {
        System.out.println(p);
      }
      for (int i = 0; i < 1; ++i) {
        particleContainer.updateAndResample(sm, 5);
      }

      for (WeightParticle p : particleContainer.getParticles()) {
        System.out.println(p);
      }
    }

    System.out.println("Serialized particle container: " + particleContainer.serialize());

    try {
      Files.write(Paths.get(particleSavePath), Arrays.asList(particleContainer.serialize()));
    } catch (IOException e) {
      e.printStackTrace();
    }

  }

}
