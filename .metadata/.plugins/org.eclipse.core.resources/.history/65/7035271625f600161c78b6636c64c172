package io.vedder.robotics.particlefilter;

import java.util.ArrayList;
import java.util.List;

import io.vedder.robotics.particlefilter.messages.InitMessage;
import io.vedder.robotics.particlefilter.messages.SensorMessage;

public class ParticleContainer {
  private final List<Particle> particles;
  private final SensorModel sensorModel;
  private final Map map;

  public ParticleContainer(final int numberParticles, final Pose defaultPose, final SensorModel sensorModel, final Map map) {
    this.particles = new ArrayList<>();
    this.sensorModel = sensorModel;
    this.map = map;
    for (int i = 0; i < numberParticles; ++i) {
      this.particles.add(new Particle(defaultPose));
    }
  }

  public void initParticles(final InitMessage init) {
    for (final Particle p : particles) {
      p.setPose(new Pose(init.getX(), init.getY(), init.getTheta()));
    }
  }

  public void updateObservation(final SensorMessage sensorMessage, final Map map) {
    for (Particle particle : particles) {
      sensorModel.sampleSensor(sensorMessage, particle, map);
    }
  }
}
