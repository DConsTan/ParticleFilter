package io.vedder.robotics.particlefilter;

import io.vedder.robotics.particlefilter.messages.OdomMessage;

public class MotionModel {
  private final double STDDEV_X;
  private final double STDDEV_Y;
  private final double STDDEV_THETA;


  public MotionModel() {
    STDDEV_X = 0.001;
    STDDEV_Y = 0.001;
    STDDEV_THETA = 0.001;
  }

  /**
   * Sample given the odometry.
   */
  public void sampleOdometry(OdomMessage odomMessage) {
    
//    // Find the probability of observation
//    // Composed of 2 uniform, exponential decay, and normal.
//    final double probability = Utils.pSampleExponential(odomMessage., lambda)
    final double noiseyX = Utils.randomN(odomMessage.getXOdom(), STDDEV_X);
    final double noiseyY = Utils.randomN(odomMessage.getYOdom(), STDDEV_Y);
    final double noiseyTheta = Utils.randomN(odomMessage.getAngleOdom(), STDDEV_THETA);
  }

}
